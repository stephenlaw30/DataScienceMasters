head(res[res$QoL==10,])
head(res)
res$QoL[:10]
res$QoL[0:10]
sum(res$QoL[0:10] > 5)
(res$QoL[0:10] > 5)
(res$MS.QoL[0:10] > 5)
sum(res$MS.QoL[0:10] > 5)
names(res)
head(res
)
clin.sci <- res[res$Group == 'Clinical Sciences']
clin.sci <- res[res$Group == 'Clinical Sciences',]
cor(clin.sci$BDI,clin.sci$QoL)
cor.test(clin.sci$BDI,clin.sci$QoL) # -0.3746403
install.packages('psych')
library(psych)
corr(clin.sci$BDI,clin.sci$QoL) # -0.3746403
corr.test(clin.sci$BDI,clin.sci$QoL) # -0.3746403
?corr.test
vars <- c('BDI','QoL')
corr.test(clin.sci[,vars]) # -0.3746403
corr.test(clin.sci[,vars])$r
corr.test(clin.sci[,vars])$r
corr.test(clin.sci[,vars])$p
corr.test(clin.sci[,vars])$t
clin.sci.model <- lm(QoL~BDI, clin.sci)
summary(clin.sci.model)
names(clin.sci)
vars <- c('DREEM.S.SP','DREEM.A.SP','Resilience', 'BDI', 'Age')
corr.test(clin.sci[,vars])$r
corr.test(clin.sci[,vars])$r
corr.test(clin.sci[,vars],use = 'pairwise.complete.obs')$r
names(clin.sci)
vars <- c('MS.QoL','DREEM.S.SP','DREEM.A.SP','Resilience', 'BDI', 'Age')
corr.test(clin.sci[,vars],)$r
vars <- c('MS.QoL','DREEM.S.SP','DREEM.A.SP','Resilience', 'BDI', 'Age')
corr.test(clin.sci[,vars])$r
clin.sci.model2 <- lm(MS.QoL ~ DREEM.S.SP + DREEM.A.SP + Resilience + BDI + Age, clin.sci)
summary(clin.sci.model2)
confint(clin.sci.model)
confint(clin.sci.model2) # confident intervals
plot(clin.sci.model, which = 1)
plot(clin.sci.model)
plot(clin.sci.model, which = 1)
# have linearity and homoscedasticity
# observations w/ numeric labels are the row #'s of outliers --> 1055, 871, 1107
#cooks distance plot
cutoff <- 4/(clin.sci.model$df) # cutoff of influence for cook's distance is 4 / dF in the LM model
plot(clin.sci.model, which = 4, cook.levels=cutoff)
plot(clin.sci.model, which = 4, cook.levels = cutoff, id.n = 5)
plot(clin.sci.model2, which = 1)
cutoff <- 4/(clin.sci.model2$df) # cutoff of influence for cook's distance is 4 / dF in the LM model
plot(clin.sci.model2, which = 4, cook.levels = cutoff, id.n = 5)
vif(clin.sci.model2)
library(car)
vif(clin.sci.model2)
library(car)
install.packages('car')
library(car)
vif(clin.sci.model2)
1/vif(clin.sci.model2)
plot(clin.sci.model2, which = 1)
lmBeta(clin.sci.model2)
round(pCorr(clin.sci.model2), 4)
cor(clin.sci$BDI,clin.sci$QoL) # -0.3746403
cor(clin.sci$BDI,clin.sci$QoL,use = "pairwise.complete.obs") # -0.3746403
cor(clin.sci$BDI,clin.sci$QoL,use = "pairwise.complete.obs") # -0.3746403
cor(clin.sci[,vars]) # -0.3746403
cor(clin.sci[,vars],use = "pairwise.complete.obs") # -0.3746403
vars <- c('BDI','QoL')
round(corr.test(clin.sci[,vars]),3)
vars <- c('BDI','QoL')
round(cor(clin.sci[,vars]),3)
cor(clin.sci[,vars])
corr.test(clin.sci[,vars])$t
round(corr.test(clin.sci[,vars])$t,3)
summary(clin.sci.model)$r
summary(clin.sci.model)
summary(clin.sci.model2)
lmBeta(clin.sci.model2)
round(lmBeta(clin.sci.model2),3)
round(pCorr(clin.sci.model2),3)
round(100*pCorr(clin.sci.model2),3)
round(100*pCorr(clin.sci.model2),2)
summary(clin.sci.model2
)
library(SDSFoundations)
res <- TempskiResilience
res <- TempskiResilience
table(res$Group)
bas.sci <- res[res$Group == 'Basic Sciences']
bas.sci <- res[res$Group == 'Basic Sciences',]
names(bas.sci)
whoModel <- lm(QoL ~ WHOQOL.PH + WHOQOL.PSY + WHOQOL.SOC + WHOQOL.ENV, bas.sci)
summary(whoModel)
library(car)
vif(whoModel)
1/vif(whoModel)
plot(whoModel, which = 1)
cutoff <- 4/(whoModel$df)
plot(whoModel, which = 4, cook.levels = cutoff, id.n = 5)
lmBeta(whoModel)
round(pCorr(whoModel), 4)
round(100*pCorr(whoModel),2) # 8.23
corr.test(bas.sci[,vars])$r
vars <- c('QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
corr.test(bas.sci[,vars])$r
cor(bas.sci[,vars])
cor(bas.sci[,vars])$r
vars <- c('QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
cor(bas.sci[,vars])
vars <- c('QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
cor(res[,vars])
whoModel <- lm(MS.QoL ~ WHOQOL.PH + WHOQOL.PSY + WHOQOL.SOC + WHOQOL.ENV, bas.sci)
summary(whoModel)
vars <- c('MS.QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
vars <- c('MS.QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
cor(res[,vars])
corr.test(res[,vars])$r
vars <- c('MS.QoL', 'WHOQOL.PH', 'WHOQOL.PSY', 'WHOQOL.SOC', 'WHOQOL.ENV')
corr.test(res[,vars])$r
corr.test(res[,vars],use = "pairwise.complete.obs)$r
corr.test(res[,vars], use = "pairwise.complete.obs')$r
corr.test(res[,vars], use = "pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
corr.test(res[,vars], use = 'pairwise.complete.obs')
corr.test(res[,vars], use = 'pairwise.complete.obs')$r
vif(whoModel)
1/vif(whoModel)
whoModel
whoModel <- lm(MS.QoL ~ WHOQOL.PH + WHOQOL.PSY + WHOQOL.SOC + WHOQOL.ENV, bas.sci)
summary(whoModel)
vif(whoModel)
plot(whoModel, which = 1)
cutoff <- 4/(whoModel$df)
plot(whoModel, which = 4, cook.levels = cutoff, id.n = 5)
lmBeta(whoModel)
function (model)
round(100*pCorr(whoModel),2) # 8.23
round(100*pCorr(whoModel),2) # 8.23
whoModel$t
whoModel
res <- TempskiResilience
clin.sci <- res[res$Group == 'Clinical Sciences',]
clin.sci
summary(lm(BDI~Age+State.Anxiety+Trait.anxiety,clin.sci))
summary(lm(BDI~Gender+State.Anxiety+Trait.anxiety,clin.sci))
summary(lm(BDI~Gender+Age+State.Anxiety+Trait.anxiety,clin.sci))
summary(lm(BDI~Age+State.Anxiety+Trait.anxiety,clin.sci))
summary(lm(BDI~Female+State.Anxiety+Trait.anxiety,clin.sci))
summary(lm(BDI~Female+Age+State.Anxiety+Trait.anxiety,clin.sci))
model1 <- summary(lm(BDI~Female+Age+State.Anxiety+Trait.anxiety,clin.sci))
summary(model1)
summary(model1)
model1 <- lm(BDI~Female+Age+State.Anxiety+Trait.anxiety,clin.sci)
summary(model1)
lmBeta(model1)
round(lmBeta(model1),3)
round(100*pCorr(model1),2)
SS = 1848.76
df <- 20-2
SS = 1848.76
SS = 1848.76
df <- 20-2
25592/2646
-23.4325 / 12.74
22.245*421
8.32*0.1528
480.78 / 1848.76
480.78 / (1848.76+480.78)
480.78 / (1848.76 - 480.78)
1848.76 / (1848.76 - 480.78)
1848.76 / (1848.76 + 480.78)
install.packages('rattle')
install.packages('RGTK2')
install.packages('RGtk2')
partial <- c(10, 20, NA, 30)
mean(partial)
mean(partial, na.rm = T)
dbinom(x = 4, size = 20, prob = 1/6)
dbinom(1,20,1/2)
dbinom(1,100,1/2)
pbinom(q = 4, size = 20, prob = 1/6)
dbinom(x = 4, size = 20, prob = 1/6)
qbinom(p = 0.75, size = 20, prob = 1/6)
pbinom(q = 3, size = 20, prob = 1/6) #76.87%
pbinom(q = 3, size = 20, prob = 1/6) #56.65%
rbinom( n = 100, size = 20, prob = 1/6 )
dnorm( x = 1, mean = 1, sd = 0.1 )
?dnorm
normal.a <- rnorm(1000, mean = 0, sd = 1)
library(ggplot2)
ggplot + geom_histogram(normal.a)
ggplot + geom_histogram(aes(normal.a))
ggplot() + geom_histogram(aes(normal.a))
?rchisq
chisq.a <- rchisq(1000, df = 3)
library(ggplot2)
ggplot() + geom_histogram(aes(chisq.a))
chi.sq.3 <- (normal.a)^2 + (normal.a)^2 + (normal.a)^2
ggplot() + geom_histogram(aes(chi.sq.3))
scaled.chisq.3 <- chi.sq.3/3
normal.d <- rnorm(1000)
normal.d / sqrt(scaled.chisq.3)
t.3 <- normal.d / sqrt(scaled.chisq.3)
ggplot() + geom_histogram(aes(t.3))
scaled.chisq.3 <- chi.sq.3/3
scaled.chisq.3 <- chi.sq.3/3
normal.d <- rnorm(1000)
t.3 <- normal.d / sqrt(scaled.chisq.3)
ggplot() + geom_histogram(aes(t.3))
ggplot() + geom_histogram(aes(t.3), bins = 4)
ggplot() + geom_histogram(aes(t.3), bins = 10)
normal.b <- rnorm(1000)
normal.3 <- rnorm(1000)
chi.sq.3 <- (normal.a)^2 + (normal.a)^2 + (normal.a)^2
ggplot() + geom_histogram(aes(chi.sq.3))
# create t-distribution from scaled chi-squared
scaled.chisq.3 <- chi.sq.3/3
normal.d <- rnorm(1000)
t.3 <- normal.d / sqrt(scaled.chisq.3)
ggplot() + geom_histogram(aes(t.3), bins = 10)
normal.a <- rnorm(1000, mean = 0, sd = 1)
library(ggplot2)
ggplot() + geom_histogram(aes(normal.a))
# generate 1000 values in a chi-squared distribution w/ dF = 3
chisq.a <- rchisq(1000, df = 3)
ggplot() + geom_histogram(aes(chisq.a))
# way #2 --> sum of squares
# square values of 3 distributions and sum
normal.b <- rnorm(1000)
normal.3 <- rnorm(1000)
chi.sq.3 <- (normal.a)^2 + (normal.a)^2 + (normal.a)^2
ggplot() + geom_histogram(aes(chi.sq.3))
# create t-distribution from scaled chi-squared
scaled.chisq.3 <- chi.sq.3/3
normal.d <- rnorm(1000)
t.3 <- normal.d / sqrt(scaled.chisq.3)
ggplot() + geom_histogram(aes(t.3), bins = 10)
chi.sq.20 <- rchisq( 1000, 20)
scaled.chi.sq.20 <- chi.sq.20 / 20
F.3.20 <- scaled.chi.sq.3 / scaled.chi.sq.20
ggplot() + geom_histogram(aes(F.3.20))
F.3.20 <- scaled.chi.sq.3 / scaled.chi.sq.20
chi.sq.20 <- rchisq( 1000, 20)
scaled.chi.sq.20 <- chi.sq.20 / 20
F.3.20 <- scaled.chisq.3 / scaled.chi.sq.20
ggplot() + geom_histogram(aes(F.3.20))
?binom.test
binom.test(x = 62, n = 100, p = .5 )
probabilities <- c(clubs = .25, diamonds = .25, hearts = .25, spades = .25)
setwd('C:/Users/NEWNSS/Dropbox/DataScienceMasters/R/Udacity/EDAWithR')
list.files()
facebook <- read.csv('pseudo_facebook.tsv', sep = '\t')
library(tidyverse)
library(ggplot2)
install.packages('tidyverse')
library(tidyverse)
ggplot(facebook) +
geom_histogram(aes(x = age), binwidth = 1, color = 'black', fill = I('#099DD9')) +
scale_x_continuous(breaks = seq(0,113,5)) +
xlab('Age') +
ylab('Count')
ggplot(facebook) +
geom_histogram(aes(log(friend_count)))
ggplot(facebook) +
geom_histogram(aes(log10(friend_count)))#, binwidth = 25)
ggplot(facebook) +
geom_histogram(aes(log(friend_count)), color = 'white')
ggplot(facebook) +
geom_histogram(aes(log10(friend_count)+1)), color = 'white')
ggplot(facebook) +
geom_histogram(aes(log10(friend_count)+1), color = 'white')
ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'white')
ggplot(facebook) +
geom_histogram(aes(log(friend_count)), color = 'white')
# this is base 10 by default
# many users have 0 friends, so base 10 is not defined for 0 (-Inf), so we see an error for 1962 rows
# looks much more normal = better for common statistical technique that assume this distribution
# specify base 10 + add 1 to result to remove errors
ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'orange')
summary(log10(facebook$friend_count))
summary(log10(facebook$friend_count+1))
install.packages("gridExtra")
p1 = ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white')
p2 = ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'green')
p3 = ggplot(facebook) +
geom_histogram(aes(sqrt(friend_count)), color = 'red')
grid.arrange(p1,p2,p3)
library(gridExtra) # multiple plots on 1 graph
p1 = ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white')
p2 = ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'green')
p3 = ggplot(facebook) +
geom_histogram(aes(sqrt(friend_count)), color = 'red')
grid.arrange(p1,p2,p3)
p1 = ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white')
# use previous plot + add scale the x-axis using log10
p2 = p1 +
scale_x_log10()
p2
p3 = p1 +
scale_x_sqrt()
p3
grid.arrange(p1,p2,p3)
p1 = ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white')
p2 = ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'green')
p3 = ggplot(facebook) +
geom_histogram(aes(sqrt(friend_count)), color = 'red')
grid.arrange(p1,p2,p3)
# sqrt is better than no transform at all, but log10 is best bc most normal
# ALTERNATE SOLUTION
p1 = ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white')
# use previous plot + add scale the x-axis using log10
p2 = p1 +
scale_x_log10()
# use 1st plot + add scale the x-axis using sqrt
p3 = p1 +
scale_x_sqrt()
grid.arrange(p1,p2,p3)
# Notice a different x-scale on this 2nd method
logScale <- ggplot(facebook) +
geom_histogram(aes(log10(friend_count+1)), color = 'green')
countScale <- ggplot(facebook) +
geom_histogram(aes(friend_count), color = 'white') +
scale_x_log10()
grid.arrange(logScale, countScale)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50)) +
facet_wrap(~ gender)
qplot(x = friend_count, data = subset(facebook, !is.na(gender)),
binwidth = 25, geom = 'freqpoly') +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50)) +
facet_wrap(~ gender)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count), binwidth = 25, color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, color = gender), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50))
qplot(x = friend_count, data = subset(facebook, !is.na(gender)),
binwidth = 25, geom = \'freqpoly\', color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, data = subset(facebook, !is.na(gender)),
binwidth = 25, geom = \'freqpoly\', color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, data = subset(facebook, !is.na(gender)),
binwidth = 25, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, y = ..count../sum(..count..), color = gender), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, y = ..count../sum(..count..), color = gender), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50)) +
ylab('Proportion')
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, y = ..count../sum(..count..),
color = gender), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50)) +
ylab('Proportion')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, y = ..count../sum(..count..),
color = gender), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,50)) +
xlab('Friend Count') +
ylab('Proportion of Users with that friend count')
qplot(x = friend_count, data = subset(facebook, !is.na(gender)), y = ..count../sum(..count..),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = friend_count, y = ..count../sum(..count..),
color = gender), binwidth = 10) +
scale_x_continuous(limits = c(450, 1000), breaks = seq(450,1000,50)) +
xlab('Friend Count') +
ylab('Proportion of Users with that friend count')
names(facebook)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes, y = ..count../sum(..count..),
color = gender), binwidth = 10)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes, y = ..count../sum(..count..),
color = gender), binwidth = 1000)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes, y = ..count../sum(..count..),
color = gender), binwidth = 1)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes,
color = gender), binwidth = 1)
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes,
color = gender))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = log10(www_likes),
color = gender))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = log10(www_likes+1),
color = gender))
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes,
color = gender)) +
scale_x_log10()
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes, y = ..count../sum(..count..)
color = gender)) +
scale_x_log10()
ggplot(subset(facebook, !is.na(gender))) +
geom_freqpoly(aes(x = www_likes, y = ..count../sum(..count..),
color = gender)) +
scale_x_log10()
table(facebook$gender,facebook$www_likes)
table(facebook$www_likes,facebook$gender)
sum(facebook$www_likes)
sum(subset(facebook,gender == 'male')$www_likes)
print('male likes' & sum(subset(facebook,gender == 'male')$www_likes))
print('male likes' + sum(subset(facebook,gender == 'male')$www_likes))
c('male likes', sum(subset(facebook,gender == 'male')$www_likes))
c('male likes: ', sum(subset(facebook,gender == 'male')$www_likes))
c('male likes: ', sum(subset(facebook,gender == 'male')$www_likes))
c('female likes: ', sum(subset(facebook,gender == 'female')$www_likes))
c('male likes: ', sum(subset(facebook,gender == 'male')$www_likes), '\n',
'female likes: ', sum(subset(facebook,gender == 'female')$www_likes))
c('male likes: ', sum(subset(facebook,gender == 'male')$www_likes),
'female likes: ', sum(subset(facebook,gender == 'female')$www_likes))
by(facebook$www_likes, facebook$gender, sum)
?geom_boxplot
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(friend_count, gender))
ggplot(subset(facebook, !is.na(gender)), aes(friend_count, gender)) +
geom_boxplot(aes(friend_count, gender))
ggplot(subset(facebook, !is.na(gender)), aes(friend_count, gender)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count)))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count)))
ggplot(subset(facebook, !is.na(gender)) +
geom_boxplot(aes(gender, friend_count)))
ggplot(subset(facebook, !is.na(gender))
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(subset(facebook, !is.na(gender)), friend_count < 500)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(subset(facebook, !is.na(gender)), friend_count < 1000)) +
geom_boxplot(aes(gender, friend_count))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count)) +
ylim(0,1000)
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count)) +
scale_y_continuous(0,1000)
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count)) +
scale_y_continuous(limits = c(0,1000))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count)) +
coord_cartesian(ylim = c(0,1000))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friend_count)) +
coord_cartesian(ylim = c(0,250))
by(facebook$friend_count, facebook$gender, summary
)
names(facebook)
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friendships_initiated))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friendships_initiated)) +
coord_cartesian(ylim = c(0,100))
ggplot(subset(facebook, !is.na(gender))) +
geom_boxplot(aes(gender, friendships_initiated)) +
coord_cartesian(ylim = c(0,200))
by(facebook$friendships_initiated, facebook$gender, summary)
# females barely
