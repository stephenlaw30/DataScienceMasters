getwd()
library(tidyverse)
ggplot(diamonds, aes(carat, price)) +
geom_hex()
ggsave("diamonds.pdf")
write_csv(diamonds, "diamonds.csv")
library(tidyverse)
library(ggplot2)
as.tibble(iris)
tibble(x = 1:5, y = 1, z = x^2 + y)
tibble(`:)` = "smile", ` ` = "space", `2000` = "number")
tribble(~x, ~y, ~z,
#--/--/----
"a", 2, 3.6,
"b", 1, 8.5)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(lubridate)
?letters
?runif
tibble(a = lubridate::now() + runif(1e3) * 86400,
b = today() + runif(1e3) * 30,
c = 1:1e3, # integers 1 - 100
d = runif(1e3), # generate 100 random deviations from the uniform distribution
e = sample(?letters, 1e3, replace = T)) # use built-in roman alphabet constants + sample 100 of time
tibble(a = lubridate::now() + runif(1e3) * 86400,
b = today() + runif(1e3) * 30,
c = 1:1e3, # integers 1 - 100
d = runif(1e3), # generate 100 random deviations from the uniform distribution
e = sample(letters, 1e3, replace = T)) # use built-in roman alphabet constants + sample 100 of time
nycflights13::flights %>%
print(n = 10, width = Inf)
nycflights13::flights %>%
View()
df <- tibble(
x = runif(5),
y = rnorm(5)
)
# Extract by name
df$x
df[["x"]]
# Extract by position
df[[1]]
df %>% .$x
df %>% .[["x"]]
class(tb) # error
class(as.data.frame(tb))
class(df) # error
class(as.data.frame(df))
tb <- tibble(
`:)` = "smile",
` ` = "space",
`2000` = "number"
)
class(tb) # error
class(as.data.frame(tb))
print(mtcars)
print(as.tibble(mtcars))
df <- data.frame(abc = 1, xyz = "a")
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
df <- data.frame(abc = 1, xyz = "a") # make a 1*2 data frame
df$x
df[, "xyz"] # get all rows for xyz col
df[, c("abc", "xyz")] # get all rows for abc and xyz cols
df <- tibble(abc = 1, xyz = "a") # make a 1*2 data frame
df$x
df[, "xyz"] # get all rows for xyz col
df[, c("abc", "xyz")] # get all rows for abc and xyz cols
library(tidyverse)
library(ggplot2)
library(lubridate)
as.tibble(iris)
tibble(x = 1:5, y = 1, z = x^2 + y) # y will be recycled
tibble(`:)` = "smile", ` ` = "space", `2000` = "number")
tribble(~x, ~y, ~z,
#--/--/----
"a", 2, 3.6,
"b", 1, 8.5)
tibble(a = lubridate::now() + runif(1e3) * 86400,
b = today() + runif(1e3) * 30,
c = 1:1e3, # integers 1 - 1000
d = runif(1e3), # generate 1000 random deviations from the uniform distribution
e = sample(letters, 1e3, replace = T)) # use built-in roman alphabet constants + sample 1000 of time
nycflights13::flights %>%
print(n = 10, width = Inf)
nycflights13::flights %>%
View() # spreadsheet-like view
df <- tibble(
x = runif(5),
y = rnorm(5)
)
# Extract by name
df$x
df[["x"]]
# Extract by position
df[[1]]
df %>% .$x
df %>% .[["x"]]
tb <- tibble(
`:)` = "smile",
` ` = "space",
`2000` = "number"
)
class(tb) # error
class(as.data.frame(tb))
print(mtcars)
print(as.tibble(mtcars))
df <- data.frame(abc = 1, xyz = "a") # make a 1*2 data frame
df$x
df[, "xyz"] # get all rows for xyz col
df[, c("abc", "xyz")] # get all rows for abc and xyz cols
df <- tibble(abc = 1, xyz = "a") # make a 1*2 data frame
df$x # does not complete column name
df[, "xyz"] # get all rows for xyz col
df[, c("abc", "xyz")] # get all rows for abc and xyz cols
var <- "mpg"
var <- "xyz"
# get
df[var]
var <- "xyz"
# get
class(df[var])
df[[var]]
class(df[[var]])
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
tibble[1]
tibble[[1]]
annoying[[1]]
annoying[[1]]
annoying$'1'
annoying %>%
ggplot(aes('1','2')) +
geom_point()
annoying[[1]]
annoying$'1'
annoying$'2'
annoying %>%
ggplot(aes(1,2)) +
geom_point()
annoying %>%
ggplot(aes(.[["1"]],.[["2"]])) +
geom_point()
annoying %>%
mutate(.[["3"]] = .[["2"]] / .[["1"]])
annoying %>%
mutate(3 = .[["2"]] / .[["1"]])
annoying %>%
mutate(.[["3"]] == .[["2"]] / .[["1"]])
annoying %>%
mutate(.$"3" == .$"2" / .$"1")
annoying %>%
mutate(.$"3" = .$"2" / .$"1")
annoying %>%
mutate("3" = "2" / "1")
annoying %>%
select("2" , "1")
annoying %>%
mutate(3 = "2" + "1")
annoying %>%
mutate(`3` = `2` / `1`)
annoying %>%
rename(one = `1`,
two = `2`,
three = `3`)
(annoying <- annoying %>%
mutate(`3` = `2` / `1`))
annoying %>%
rename(one = `1`,
two = `2`,
three = `3`)
?enframe
nums <- c(1,2,3,4,5,6)
enframe(nums)
nums <- c('one','two',3,'four',5,'apple)
enframe(nums)
nums <- c('one','two',3,'four',5,'apple')
enframe(nums)
?tibble.print
??tibble.print
?print
?print.tibble
nycflights13::flights %>%
print(n_extra = 2)
nycflights13::flights %>%
print(n_extra = 3)
nycflights13::flights %>%
print(n_extra = 12)
nycflights13::flights %>%
print(n_extra = 1)
nycflights13::flights %>%
print(n_extra = 2)
nycflights13::flights %>%
print(n_extra = 1231)
nycflights13::flights %>%
print(n_extra = 1)
nycflights13::flights %>%
print(n_extra = 2)
