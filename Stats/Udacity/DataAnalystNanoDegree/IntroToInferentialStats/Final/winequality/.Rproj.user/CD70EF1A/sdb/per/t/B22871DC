{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Udacity Intro to Inferential Statistics Final Project - Wine Quality\"\noutput:\n  html_document: default\n  github_document: default\n  word_document: default\n---\n\n# Analysis of Wine Quality\n\n## Hypothesis Test\n\nUtilizing the **Wine Quality Data Set** from the [UCI Machine Learning Repository.](https://archive.ics.uci.edu/ml/datasets/Wine+Quality), we can do some simple statistic test to find some interesting insights about this data set of wine characteristics.\n\nThis is actually 2 datasets, which, respectively, are related to red and white variants of the Portuguese \"Vinho Verde\" wine, which consists of wine from the Minho region of Portugal. Portugal is currently one of the top exporters of wine in the world.\n\nThe data sets contain the same variables, where the inputs/independent variables are physicochemical data, and sensory/output variables are also available (e.g. there is no data about grape type, brand, selling price, etc.).\n\nI was interested in finding out if there's a significant difference in quality of wines with higher alcohol content (a higher **alcohol by volume (ABV) percentage**) compared to the population of wines gathered in these 2 data sets. \n\nThe first thing I did was load in both data sets and merge them together, while also creating a new feature, **isRed**, to signify if a wine was a red or a white, in case I needed this later.\n\n```{r setup, echo = FALSE}\n# load in libraries\nlibrary(ggplot2)\n\n# load in data\nred <- read.csv('winequality-red.csv', sep = ';')\nwhite <- read.csv('winequality-white.csv',sep = ';')\n\n# create factor for wine color for a combined data set\nred$isRed <- 1\nwhite$isRed <- 0\n\n# combine data frames\nwine <- rbind(red,white)\nwine$isRed <- as.factor(wine$isRed)\n```\n\n```{r inspect data set, echo = FALSE}\nhead(wine)\nsprintf('Number of wines: %i',nrow(wine))\n```\n\nMy hypotheses for this data set of 6497 wines were:\n\n* **h(0) = There is no signifcant difference in wine quality between all wines and wines of a higher ABV%**\n* **h(a) = Wines with a higher ABV significantly differ in quality than the population of wines**\n\nMy first step after defining my hypotheses was to check the distribution of the **quality** variable of the dataset.\n\n```{r check population, echo = FALSE}\nggplot(wine) + geom_histogram(aes(x = (quality)),\n                              bins = 6,\n                              fill = 'purple', \n                              colour = 'black') + \n  ggtitle('Distribution of Wine Quality Scores') + \n  xlab('Quality') + \n  ylab('Count')\n```\n\nI can see that my distribution is generally normal. So I can then find my population parameters, &#956; and &#963;:\n\n```{r create population parameters, echo = FALSE}\nmu <- round(mean(wine$quality),2) # 5.818378\nsigma <- round(sd(wine$quality),2) # 0.8732553\nsprintf('Mu: %f',mu)\nsprintf('Sigma: %f',sigma)\n```\n\nThen, I can create a sample from this population which will consist of of all wines who have a higher alcohol content than the mean alcohol content of the population.\n\n```{r create above average alcohol content sample, echo = FALSE}\nset.seed(15)\nhighAlcQuality <- wine$quality[wine$alcohol > mean(wine$alcohol)]\nalcMean <- round(mean(wine$alcohol),2)\nsprintf('Population Mean Alcohol Content: %f',alcMean)\nsprintf('Sample Size: %i',length(highAlcQuality))\n```\n\nSo I'd end up with have a sample of 3006 wines, a little less than half of the population, each of whom has an alcohol content is greater than 10.49% ABV.\n\nNow I can check out the distribution of the values of quality for these wines with an above-average alcohol content.\n\n```{r check distribution of sample, echo = FALSE} \nggplot() + geom_histogram(aes(x = highAlcQuality), \n                 bins = 6, \n                 fill = 'dark red', \n                 colour = 'black') + \n  ggtitle('Distribution of Quality of Above-Average Alcohol Content Wine') + \n  xlab('Quality') +\n  ylab('Count')\n```\n\nBy reviewing the original distribution of wine quality from the population, we can see that the distribution of quality is almost a mirror image over the quality value of **6**. \n\nBoth are basically normally distributed, but the population quality distribution resembles a *very slight* right skew, while the sample quality distribution resembles a *very slight* left skew.\n\nNext, we need to calculate the sample statistics, the mean quality score ( x&#772; ) from the sample and the standard error ( &#963;/&#8730;n ). Afterwards, we'd need to calculate the margin of error by multiplying our standard error by the z-critical value of 1.96 for a 95% confidence level. ( &#945; = 0.05 ).\n\n```{r create sample statistics, echo = FALSE}\nx <- mean(highAlcQuality) # 6.184963\nstdErr <- sigma/sqrt(length(highAlcQuality)) # 0.01592747\n# calculate margin of error for z-critical score of 1.96 for 95% confidence\nmargErr <- 1.96*stdErr # 0.03121784\nsprintf('x bar: %f',round(x,2))\nsprintf('Std. Error: %f',round(stdErr,2))\n```\n\nWe'd then use the x&#772;, &#956;, and standard error to calculate a z-score\n\n```{r create z-score to test if difference is significant, echo = FALSE}\nz <- (x - mu)/(stdErr) # 23.01594\nsprintf('Z: %f',round(z,2))\n```\n\nWe can see that our z-score is absurdly higher than our z-critical score, most likely due to our superflourous sample size. \n\nTherefore, we can reject the null hypotheses that higher ABV wine is the same quality as wine with below average ABV or wine with average ABV In other words, the quality of a higher alcohol by volume wine is significantly different that the quality of the entire population of wine, and this is not likely due to chance.\n\n## Correlation\n\nWe can then check to see the relationship between these 2 variables via **correlation**. The first step in this would be to inspect the data via a scatterplot of the two variables.\n\n```{r wine scatterplot, echo = FALSE}\nggplot() + \n  geom_point(aes(x = red$alcohol, y = red$quality), \n             shape = 21, colour = \"black\", fill = \"red\", size = 3, stroke = 1) + \n  geom_point(aes(x = white$alcohol, y = white$quality), \n             shape = 21, colour = 'black', fill = \"white\", size = 2, stroke = 1) + \n  ggtitle('Wine Alcohol Content vs. Wine Quality') + \n  xlab('Alcohol by Volume (ABV %)') + \n  ylab('Quality')\n```\n\nSo we can see a slight positive linear relationship, but it does not look very strong.\n\nThis is possibly due to the thin axes range we are dealing with, or maybe just because the relationship is genuinely not that strong, and there are other factors at play that affect wine quality. It's more than likely we have extraneous factors affecting this quality score that are not even captured in our data set.\n\nBut for now, let's check the Pearson Correlation Coefficient ( r ), as well as the Coefficient of Determination ( r&#178; ).\n\n```{r correlation, echo = FALSE}\nwineCorr <- cor(wine$alcohol,wine$quality)\nwineCoeffDet <- cor(wine$alcohol,wine$quality)^2 \nsprintf('r : %f',round(wineCorr,4))\nsprintf('r squared : %f',round(wineCoeffDet,4))\n```\n\nSo we can see that we have a moderate positive linear relationship ( r = 0.4443) between the alcohol content of wine and the quality of wine. \n\nWe also see, from our r&#178; value, that only about 19.74% of the variation in the quality of the wine was due to the variation in the ABV percentages of the wine.\n\nSo, from the two tests ran above, we can conclude that a higher ABV % of a wine from the Minho region of Portugal *tends* to have be of a higher quality, with a moderately strong positive relationship between the 2 factors. \n\nFuture analysis could include performing the same tests as above, but for another factor instead of ABV, or a comparison of the characteristics of white wine versus red wine.",
    "created" : 1499810741314.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3454563434",
    "id" : "B22871DC",
    "lastKnownWriteTime" : 1499817319,
    "last_content_update" : 1499817319311,
    "path" : "C:/Users/NEWNSS/Dropbox/DataScienceMasters/Stats/Udacity/DataAnalystNanoDegree/IntroToInferentialStats/Final/winequality/finalMarkdown.Rmd",
    "project_path" : "finalMarkdown.Rmd",
    "properties" : {
        "last_setup_crc32" : "A5FA949A7d642e1f",
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}