--INNER JOIN = only MATCHING rows from BOTH tables
--LEFT/RIGHT OUTER JOIN = keep ALL rows from Left/right table and only MATCHING from other
--FULL OUTER JOIN = NO rows in ANY table are discarded --> matches up 2 tables + doesn't trim out anything

--DUPLICATES
--  - Ex: If ID1 is in table 1 once and in table 2 three times, if we INNER JOIN on that column, we get all columns from both tables where that ID matches
--	- i.e. we get all 3 rows from the right with their columns added after the columns from table 1 (duplicated 3 times) to end up w/ 3 total rows

-- Can JOIN on multiple fields (get only rows where BOTH conditions are TRUE

--CROSS-JOIN = Cartesian Product of set A by set B --> returns a SET (AxB) of all possible ordered pairs/combinations of the records in the 2 sets w/ no
--	criteria for the match (no ON clause)
--		i.e. 1st row in 1st table is linked to EVERY row in 2nd table, then same for 2nd row in 1st table and so on
--		ex: 89 rows CROSS JOIN 100 rows = result of 8900 rows
--	there are some situations where we'd need to see all possible combos of rows + tables
--		ex: set of colors vs. set of tiles + we need a resulting table of a combo of all colors + tiles
--		ex: 5 people + each has 3 doors to go through + we want to see each combo of this
--		ex: analyzing socioeconimic patterns

CREATE TABLE pets (
    petid 	varchar,
    name 	varchar,
    kind 	varchar,
    gender 	varchar,
    age 	int,
    ownerid varchar
);

COPY pets FROM 'C:\Users\Nimz\Dropbox\DataScienceMasters\SQL\Udemy\SQL_and_DB_Design_AZ\Section7_VetClinic\Pets.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE owners (
    ownerid 		varchar,
    name 			varchar,
    surname 		varchar,
    streetaddress 	varchar,
    city 			varchar,
    state 			varchar(2),
    statefull 		varchar,
    zipcode 		varchar
);

COPY owners FROM 'C:\Users\Nimz\Dropbox\DataScienceMasters\SQL\Udemy\SQL_and_DB_Design_AZ\Section7_VetClinic\Owners.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE proceduredetails (
    proceduretype 		varchar,
    proceduresubcode 	varchar,
    description 		varchar,
    price 				float
);

COPY proceduredetails FROM 'C:\Users\Nimz\Dropbox\DataScienceMasters\SQL\Udemy\SQL_and_DB_Design_AZ\Section7_VetClinic\ProceduresDetails.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE procedurehistory (
    petid varchar,
    proceduredate date,
    proceduretype varchar,
    proceduresubcode varchar
);

COPY procedurehistory FROM 'C:\Users\Nimz\Dropbox\DataScienceMasters\SQL\Udemy\SQL_and_DB_Design_AZ\Section7_VetClinic\ProceduresHistory-1.csv' DELIMITER ',' CSV HEADER;